<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">	
	
	<name>TVE search</name>
	<description>Subsystem for indexed search</description>
	<modelVersion>4.0.0</modelVersion>
	<groupId>ru.eabdrazakov.search</groupId>
	<artifactId>search</artifactId>	
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	
	<scm>
		<connection>scm:git:git://first/git_repository.git</connection>
		<developerConnection>scm:git:git://first/git_repository.git</developerConnection>
		<url>http://first:8880/gitweb/?p=git_repository.git;a=summary</url>
	</scm>
	<developers>
		<developer>
			<name>Eldar Abdrazakov</name>
			<id>e.abdrazakov</id>
			<email>e.abdrazakov@cti.ru</email>
			<organization>CTI</organization>
			<roles>
				<role>Software engineer</role>
			</roles>
			<timezone>+3</timezone>
		</developer>
	</developers>
	<distributionManagement>
		<site>
			<id> website</id>
			<url>${siteSubsystemUrl}</url>
		</site>
	</distributionManagement>
	<dependencies>
		<!-- External dependencies -->
		
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>compile</scope>
		</dependency>                
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.0.1</version>
			<scope>compile</scope>
		</dependency> 
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>quartz-all</artifactId>
			<version>1.6.1</version>
		</dependency>            
		<dependency>
			<groupId>org.opensymphony.quartz</groupId>
			<artifactId>quartz</artifactId>
			<version>1.6.1</version>
		</dependency>		
		        <!-- Spring - open source full stack framework (http://www.springframework.org) -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-core</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <!-- Expression Language (depends on spring-core) Define this if you use Spring Expression APIs (org.springframework.expression.*) -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-expression</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define this if you use Spring Bean APIs (org.springframework.beans.*) -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
		<dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-asm</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-jms</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans) Define this if you use Spring AOP 
                        APIs (org.springframework.aop.*) -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-aop</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-aspects</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>		
		<!-- Java Persistence API 
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0-rev-1</version>
		</dependency>-->
                <!-- Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) This is the central artifact 
                        for Spring's Dependency Injection Container and is generally always defined -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-context</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <!-- Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration Define this 
                        if you need any of these integrations -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-context-support</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <!-- Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context) Define this 
                        if you use Spring Transactions or DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-tx</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx) Define this if you use 
                        Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-jdbc</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis. (depends on spring-core, spring-beans, 
                        spring-context, spring-tx) Define this if you need ORM (org.springframework.orm.*) -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-orm</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>
                <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans. (depends 
                        on spring-core, spring-beans, spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-oxm</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>compile</scope>
                </dependency>	
		<dependency>
			<groupId>org.springmodules</groupId>
			<artifactId>spring-modules-lucene</artifactId>
			<version>0.8</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.java-persistence</groupId>
			<artifactId>jpa-api</artifactId>
			<version>2.0-cr-1</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>3.6.7.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.6.7.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>3.2.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search</artifactId>
			<version>3.4.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-analyzers</artifactId>
			<version>3.4.1.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.2</version>
		</dependency>
		<!-- Spring Batch -->
		<dependency>
                        <groupId>org.springframework.batch</groupId>
                        <artifactId>spring-batch-core</artifactId>
			<version>2.1.8.RELEASE</version>
			<scope>compile</scope>
                </dependency>
                <dependency>
                        <groupId>org.springframework.batch</groupId>
                        <artifactId>spring-batch-infrastructure</artifactId>
			<version>2.1.8.RELEASE</version>
			<scope>compile</scope>
                </dependency>
                <dependency>
                        <groupId>org.springframework.batch</groupId>
                        <artifactId>spring-batch-test</artifactId>
			<version>2.1.8.RELEASE</version>
                        <scope>compile</scope>
                </dependency>			
                <!-- Spring test - part of spring framework for facilitation testing ! (http://www.springframework.org) -->
                <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-test</artifactId>
			<version>3.0.6.RELEASE</version>
                        <scope>test</scope>
                </dependency>
		<!-- JUnit - de facto standard for unit testing (http://junit.org) -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
                        <scope>test</scope>
		</dependency>
		<!-- TestNG - alternative framework for testing (http://testng.org) -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.1.1</version>
			<scope>compile</scope> 
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
		        <artifactId>mockito-all</artifactId>
			<version>1.9.0-rc1</version>
                        <scope>test</scope>
		</dependency> 
		<!-- Great AOP system: AspectJ, needed for Spring Test Framework -->
		<!--<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
                        <scope>test</scope>
		</dependency>-->
		<!-- PostgreSQL JDBC Driver for integration testing (http://jdbc.postgresql.org) -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.0-801.jdbc4</version>
                        <scope>compile</scope>
		</dependency>
		<!-- H2 - very fast and free SQL database (http://www.h2database.com) -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.0.60</version>
		</dependency>			
		<!-- Pool connections at Database for integration testing -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
                        <scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.4</version>
                        <scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
                        <scope>compile</scope>
		</dependency>
	</dependencies>	
	<build>
		<plugins>                  	
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
					</suiteXmlFiles>

					<additionalClasspathElements>
						<additionalClasspathElement>target/test-classes</additionalClasspathElement>
						<additionalClasspathElement>target/test-classes/tests</additionalClasspathElement>
					</additionalClasspathElements>
					
					<systemProperties>
						<property>
							<name>java.class.path</name>
							<value>target/classes</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>
                         <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
			<version>2.3.1</version>
                        <configuration>
                                <archive>
                                        <manifest>
                                          <!--      <addDefaultImplementationEntries>true</addDefaultImplementationEntries>-->
                                                <addClasspath>true</addClasspath>
                                        </manifest>
                                        <addMavenDescriptor>false</addMavenDescriptor>
                                        <manifestEntries>
                                                <Main-Class>ru.cti.verimatrix.VerimatrixMain</Main-Class>
                                                <Artefact-version>${pom.version}</Artefact-version>
                                                <Build-number-with-prefix>${buildNumberValueWithPrefix}</Build-number-with-prefix>
                                                <Build-number>${buildNumber}</Build-number>
                                                <Build-date>${buildDate}</Build-date>
                                                <Version-TVengine>${versionTVengine}</Version-TVengine>
                                        </manifestEntries>
                                </archive>
                        </configuration>
                </plugin>
                <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                          <version>2.2-beta-5</version>
                        <configuration>
                                <includeSite>false</includeSite>
                                <descriptor>src/main/assembly/iptvmw-distrib.xml</descriptor>
                        </configuration>
                        <executions>
                                <execution>
                                        <goals>
                                                <goal>assembly</goal>
                                        </goals>
                                </execution>
                        </executions>
                </plugin>
            </plugins>
	</build>
</project>